/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.ceng431_hmw3.Views;
import com.mycompany.ceng431_hmw3.ConcreteClasses.Model;
import com.mycompany.ceng431_hmw3.interfaces.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;

/**
 *
 * @author BO006
 */
public class MainView extends javax.swing.JFrame implements IObserver {


    @Override
    public void update(IObservable observable) {


        IModel model= (IModel) observable;

        if(model.getViewState()==ViewState.SONGS)
        {
            initializeTable();
        }
        if(model.getViewState()==ViewState.PLAYLIST)
        {

            initializeTable(model.getSongs(lastUsedPlaylistId));


        }
        if(model.getViewState()==ViewState.PLAYLIST_CREATED)
        {
            fillPlaylistTable(model.getPlayList(model.getCurrentUsername()));

        }
        if(model.getViewState()==ViewState.FOLLOW)
        {
            fillFollowedUsersTable(model.getFollowedUsers());

        }



    }
    private int lastUsedPlaylistId=0;
    private  int selectedSongsTableRow =0;
    private int selectedPlaylistTableRow = 0;
    private int selectedAllUsersTableRow=0;
    private int selectedFollowersTableRow=0;

    /**
     * Creates new form MainViewV1
     */
    public MainView() {
        initComponents();
        initializeTable();
        fillComboBoxWithPlaylistType();
        fillUserPlaylistsComboBox();
        showSongsPanel();
       
    }


    private void updateBottomPanel(){

        bottomLabelSongName.setText(songTable.getModel().getValueAt(selectedSongsTableRow,0).toString());
        bottomLabelArtist.setText(songTable.getModel().getValueAt(selectedSongsTableRow,1).toString());
        bottomLabelDuration.setText(songTable.getModel().getValueAt(selectedSongsTableRow,4).toString());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        leftPanelPlaylistsButton = new javax.swing.JButton();
        leftPanelSeperator = new javax.swing.JSeparator();
        leftPanelSongsButton = new javax.swing.JButton();
        leftPanelSeperator1 = new javax.swing.JSeparator();
        leftPanelFollowersButton = new javax.swing.JButton();
        leftPanelButtonStatistic = new javax.swing.JButton();
        leftPanelSeperator2 = new javax.swing.JSeparator();
        leftPanelSeperator3 = new javax.swing.JSeparator();
        topPanel = new javax.swing.JPanel();
        topPanelLabelLoggedUser = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        panelSongTable = new javax.swing.JPanel();
        panelSongTable1 = new javax.swing.JScrollPane();
        songTable = new javax.swing.JTable();
        comboBoxPlaylist = new javax.swing.JComboBox<>();
        buttonAddSongToPlaylist = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        panelPlaylistOperations = new javax.swing.JPanel();
        panelPlaylistTable1 = new javax.swing.JScrollPane();
        playlistTable1 = new javax.swing.JTable();
        panelPlaylistAdder = new javax.swing.JPanel();
        textFieldPlaylistName = new javax.swing.JTextField();
        comboBoxPlaylistType = new javax.swing.JComboBox<>();
        labelplaylistName = new javax.swing.JLabel();
        labelplaylistType = new javax.swing.JLabel();
        buttonPlaylistAdd1 = new javax.swing.JButton();
        buttonShowSelectedPlaylist = new javax.swing.JButton();
        panelFollowersAndUserOperations = new javax.swing.JPanel();
        panelFollowersOperation = new javax.swing.JPanel();
        panelPlaylistTable2 = new javax.swing.JScrollPane();
        followersTable = new javax.swing.JTable();
        buttonShowSelectedUserPlaylist = new javax.swing.JButton();
        buttonUnfollow = new javax.swing.JButton();
        panelUserOperations = new javax.swing.JPanel();
        panelPlaylistTable3 = new javax.swing.JScrollPane();
        followersTable1 = new javax.swing.JTable();
        buttonFollow = new javax.swing.JButton();
        panelStatistic = new javax.swing.JPanel();
        panelMostLikedSong = new javax.swing.JPanel();
        labelTheMostLikedSongName = new javax.swing.JLabel();
        labelTheMostLikedSongArtist = new javax.swing.JLabel();
        labelTheMostLikedSongLikes = new javax.swing.JLabel();
        labelTheMostLikedSongPopularity = new javax.swing.JLabel();
        labelTheMostLikedSongDuration = new javax.swing.JLabel();
        labelTheMostLilkeSongLikes1 = new javax.swing.JLabel();
        labelTheMostLikeSongPopularity1 = new javax.swing.JLabel();
        labelTheMostPopularSongDuration2 = new javax.swing.JLabel();
        labelTheMostLikedSong = new javax.swing.JLabel();
        panelMostPopularSong = new javax.swing.JPanel();
        labelTheMostPopularSongName = new javax.swing.JLabel();
        labelTheMostPopularSongArtist = new javax.swing.JLabel();
        labelTheMostPopularSongLikes = new javax.swing.JLabel();
        labelTheMostPopularSongPopularity = new javax.swing.JLabel();
        labelTheMostPopularSongDuration = new javax.swing.JLabel();
        labelTheMostPopularSongDuration1 = new javax.swing.JLabel();
        labelTheMostPopularSongLikes1 = new javax.swing.JLabel();
        labelTheMostPopularSongPopularity1 = new javax.swing.JLabel();
        labelTheMostPopularSong = new javax.swing.JLabel();
        panelMostFollowedUser = new javax.swing.JPanel();
        labelTheMostFollowedUsername = new javax.swing.JLabel();
        labelTheMostFollowedUserListSize = new javax.swing.JLabel();
        labelTheMostFollowedUserListSize1 = new javax.swing.JLabel();
        labelTheMostFollowedUser = new javax.swing.JLabel();
        panelMostFollowedUser1 = new javax.swing.JPanel();
        labelTheShortestListName = new javax.swing.JLabel();
        labelTheShortestListCreator = new javax.swing.JLabel();
        labelTheShortestListDuration = new javax.swing.JLabel();
        labelTheShortestListDuration1 = new javax.swing.JLabel();
        labelTheShortestList = new javax.swing.JLabel();
        panelMostFollowedUser2 = new javax.swing.JPanel();
        labelTheLongestListName = new javax.swing.JLabel();
        labelTheLongestListDuration = new javax.swing.JLabel();
        labelTheLongestListCreator = new javax.swing.JLabel();
        labelTheLongestListDuration2 = new javax.swing.JLabel();
        labelTheLongestList = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        panelBottom = new javax.swing.JPanel();
        bottomLabelSongName = new javax.swing.JLabel();
        bottomLabelArtist = new javax.swing.JLabel();
        bottomButtonPlay = new javax.swing.JButton();
        bottomButtonLike = new javax.swing.JButton();
        bottomLabelDuration = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(27, 27, 27));
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(46, 46, 46));
        mainPanel.setToolTipText("");

        leftPanel.setBackground(new java.awt.Color(27, 27, 27));

        leftPanelPlaylistsButton.setBackground(new java.awt.Color(25, 25, 25));
        leftPanelPlaylistsButton.setFont(new java.awt.Font("Cascadia Mono", 0, 18)); // NOI18N
        leftPanelPlaylistsButton.setForeground(new java.awt.Color(255, 255, 255));
        leftPanelPlaylistsButton.setText("Playlists");
        leftPanelPlaylistsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        leftPanelPlaylistsButton.setBorderPainted(false);
        leftPanelPlaylistsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftPanelPlaylistsButtonMouseClicked(evt);
            }
        });
        leftPanelPlaylistsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftPanelPlaylistsButtonActionPerformed(evt);
            }
        });

        leftPanelSongsButton.setBackground(new java.awt.Color(25, 25, 25));
        leftPanelSongsButton.setFont(new java.awt.Font("Cascadia Mono", 0, 18)); // NOI18N
        leftPanelSongsButton.setForeground(new java.awt.Color(255, 255, 255));
        leftPanelSongsButton.setText("Songs");
        leftPanelSongsButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        leftPanelSongsButton.setBorderPainted(false);
        leftPanelSongsButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        leftPanelSongsButton.setIconTextGap(20);
        leftPanelSongsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftPanelSongsButtonMouseClicked(evt);
            }
        });

        leftPanelFollowersButton.setBackground(new java.awt.Color(25, 25, 25));
        leftPanelFollowersButton.setFont(new java.awt.Font("Cascadia Mono", 0, 18)); // NOI18N
        leftPanelFollowersButton.setForeground(new java.awt.Color(255, 255, 255));
        leftPanelFollowersButton.setText("Followers");
        leftPanelFollowersButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        leftPanelFollowersButton.setBorderPainted(false);
        leftPanelFollowersButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftPanelFollowersButtonMouseClicked(evt);
            }
        });

        leftPanelButtonStatistic.setBackground(new java.awt.Color(25, 25, 25));
        leftPanelButtonStatistic.setFont(new java.awt.Font("Cascadia Mono", 0, 18)); // NOI18N
        leftPanelButtonStatistic.setForeground(new java.awt.Color(255, 255, 255));
        leftPanelButtonStatistic.setText("Statistics");
        leftPanelButtonStatistic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        leftPanelButtonStatistic.setBorderPainted(false);
        leftPanelButtonStatistic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftPanelButtonStatisticMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanelPlaylistsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(leftPanelSeperator)))
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(leftPanelSongsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftPanelSeperator1))
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftPanelFollowersButton, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanelSeperator2)
                    .addComponent(leftPanelButtonStatistic, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(leftPanelSeperator3))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(leftPanelSongsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftPanelSeperator, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftPanelPlaylistsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(leftPanelSeperator1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftPanelFollowersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftPanelSeperator3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(leftPanelButtonStatistic, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftPanelSeperator2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        topPanel.setBackground(new java.awt.Color(27, 27, 27));

        topPanelLabelLoggedUser.setFont(new java.awt.Font("Cascadia Mono", 2, 16)); // NOI18N
        topPanelLabelLoggedUser.setForeground(new java.awt.Color(255, 255, 255));
        topPanelLabelLoggedUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        topPanelLabelLoggedUser.setText("Welcome username");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(topPanelLabelLoggedUser, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topPanelLabelLoggedUser)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        panelSongTable.setBackground(new java.awt.Color(46, 46, 46));
        panelSongTable.setForeground(new java.awt.Color(242, 242, 242));

        songTable.setBackground(new java.awt.Color(46, 46, 46));
        songTable.setFont(new java.awt.Font("Cascadia Mono", 0, 12)); // NOI18N
        songTable.setForeground(new java.awt.Color(255, 255, 255));
        songTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Song", "Artist", "#OfLikes", "Popularity", "Duration", "TrackID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        songTable.setGridColor(new java.awt.Color(26, 26, 26));
        songTable.setMinimumSize(new java.awt.Dimension(661, 472));
        songTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        songTable.setShowGrid(false);
        songTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songTableMouseClicked(evt);
            }
        });
        panelSongTable1.setViewportView(songTable);

        comboBoxPlaylist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonAddSongToPlaylist.setText("Add");

        buttonRemove.setText("Remove");

        javax.swing.GroupLayout panelSongTableLayout = new javax.swing.GroupLayout(panelSongTable);
        panelSongTable.setLayout(panelSongTableLayout);
        panelSongTableLayout.setHorizontalGroup(
            panelSongTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSongTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBoxPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(buttonAddSongToPlaylist)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 515, Short.MAX_VALUE)
                .addComponent(buttonRemove)
                .addGap(80, 80, 80))
            .addGroup(panelSongTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelSongTableLayout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addComponent(panelSongTable1, javax.swing.GroupLayout.DEFAULT_SIZE, 914, Short.MAX_VALUE)
                    .addGap(5, 5, 5)))
        );
        panelSongTableLayout.setVerticalGroup(
            panelSongTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSongTableLayout.createSequentialGroup()
                .addContainerGap(497, Short.MAX_VALUE)
                .addGroup(panelSongTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddSongToPlaylist)
                    .addComponent(comboBoxPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRemove))
                .addGap(42, 42, 42))
            .addGroup(panelSongTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelSongTableLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelSongTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(86, Short.MAX_VALUE)))
        );

        playlistTable1.setBackground(new java.awt.Color(46, 46, 46));
        playlistTable1.setFont(new java.awt.Font("Cascadia Mono", 0, 12)); // NOI18N
        playlistTable1.setForeground(new java.awt.Color(255, 255, 255));
        playlistTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "PlaylistType", "Duration", "CreatorUsername", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        playlistTable1.setGridColor(new java.awt.Color(26, 26, 26));
        playlistTable1.setMinimumSize(new java.awt.Dimension(661, 472));
        playlistTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        playlistTable1.setShowGrid(false);
        playlistTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistTable1MouseClicked(evt);
            }
        });
        panelPlaylistTable1.setViewportView(playlistTable1);

        panelPlaylistAdder.setBackground(new java.awt.Color(46, 46, 46));
        panelPlaylistAdder.setForeground(new java.awt.Color(242, 242, 242));

        labelplaylistName.setForeground(new java.awt.Color(255, 255, 255));
        labelplaylistName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelplaylistName.setText("playlistName");

        labelplaylistType.setForeground(new java.awt.Color(255, 255, 255));
        labelplaylistType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelplaylistType.setText("playlistType");

        buttonPlaylistAdd1.setText("Add");

        buttonShowSelectedPlaylist.setText("Show Playlist");
        buttonShowSelectedPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonShowSelectedPlaylistMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelPlaylistAdderLayout = new javax.swing.GroupLayout(panelPlaylistAdder);
        panelPlaylistAdder.setLayout(panelPlaylistAdderLayout);
        panelPlaylistAdderLayout.setHorizontalGroup(
            panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlaylistAdderLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelplaylistName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelplaylistType, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPlaylistAdderLayout.createSequentialGroup()
                        .addComponent(comboBoxPlaylistType, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(buttonPlaylistAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textFieldPlaylistName, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(333, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPlaylistAdderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonShowSelectedPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        panelPlaylistAdderLayout.setVerticalGroup(
            panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlaylistAdderLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(buttonShowSelectedPlaylist)
                .addGap(18, 18, 18)
                .addGroup(panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPlaylistName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelplaylistName))
                .addGap(48, 48, 48)
                .addGroup(panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPlaylistAdderLayout.createSequentialGroup()
                        .addGroup(panelPlaylistAdderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelplaylistType)
                            .addComponent(comboBoxPlaylistType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelPlaylistAdderLayout.createSequentialGroup()
                        .addComponent(buttonPlaylistAdd1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(74, 74, 74))))
        );

        javax.swing.GroupLayout panelPlaylistOperationsLayout = new javax.swing.GroupLayout(panelPlaylistOperations);
        panelPlaylistOperations.setLayout(panelPlaylistOperationsLayout);
        panelPlaylistOperationsLayout.setHorizontalGroup(
            panelPlaylistOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlaylistOperationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPlaylistAdder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addGroup(panelPlaylistOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelPlaylistOperationsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistTable1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelPlaylistOperationsLayout.setVerticalGroup(
            panelPlaylistOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPlaylistOperationsLayout.createSequentialGroup()
                .addContainerGap(369, Short.MAX_VALUE)
                .addComponent(panelPlaylistAdder, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelPlaylistOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelPlaylistOperationsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistTable1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(208, Short.MAX_VALUE)))
        );

        panelFollowersAndUserOperations.setBackground(new java.awt.Color(46, 46, 46));
        panelFollowersAndUserOperations.setForeground(new java.awt.Color(242, 242, 242));

        panelFollowersOperation.setBackground(new java.awt.Color(46, 46, 46));
        panelFollowersOperation.setForeground(new java.awt.Color(242, 242, 242));

        followersTable.setBackground(new java.awt.Color(46, 46, 46));
        followersTable.setFont(new java.awt.Font("Cascadia Mono", 0, 12)); // NOI18N
        followersTable.setForeground(new java.awt.Color(255, 255, 255));
        followersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        followersTable.setGridColor(new java.awt.Color(26, 26, 26));
        followersTable.setMinimumSize(new java.awt.Dimension(661, 472));
        followersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        followersTable.setShowGrid(false);
        followersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                followersTableMouseClicked(evt);
            }
        });
        panelPlaylistTable2.setViewportView(followersTable);

        buttonShowSelectedUserPlaylist.setText("show");
        buttonShowSelectedUserPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonShowSelectedUserPlaylistMouseClicked(evt);
            }
        });

        buttonUnfollow.setText("Unfollow");

        javax.swing.GroupLayout panelFollowersOperationLayout = new javax.swing.GroupLayout(panelFollowersOperation);
        panelFollowersOperation.setLayout(panelFollowersOperationLayout);
        panelFollowersOperationLayout.setHorizontalGroup(
            panelFollowersOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFollowersOperationLayout.createSequentialGroup()
                .addContainerGap(644, Short.MAX_VALUE)
                .addComponent(buttonUnfollow)
                .addGap(30, 30, 30)
                .addComponent(buttonShowSelectedUserPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(panelFollowersOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelFollowersOperationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistTable2, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelFollowersOperationLayout.setVerticalGroup(
            panelFollowersOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFollowersOperationLayout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addGroup(panelFollowersOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonShowSelectedUserPlaylist)
                    .addComponent(buttonUnfollow))
                .addGap(17, 17, 17))
            .addGroup(panelFollowersOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelFollowersOperationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistTable2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(114, Short.MAX_VALUE)))
        );

        panelUserOperations.setBackground(new java.awt.Color(46, 46, 46));
        panelUserOperations.setForeground(new java.awt.Color(242, 242, 242));

        followersTable1.setBackground(new java.awt.Color(46, 46, 46));
        followersTable1.setFont(new java.awt.Font("Cascadia Mono", 0, 12)); // NOI18N
        followersTable1.setForeground(new java.awt.Color(255, 255, 255));
        followersTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        followersTable1.setGridColor(new java.awt.Color(26, 26, 26));
        followersTable1.setMinimumSize(new java.awt.Dimension(661, 472));
        followersTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        followersTable1.setShowGrid(false);
        followersTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                followersTable1MouseClicked(evt);
            }
        });
        panelPlaylistTable3.setViewportView(followersTable1);

        buttonFollow.setText("follow");
        buttonFollow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonFollowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUserOperationsLayout = new javax.swing.GroupLayout(panelUserOperations);
        panelUserOperations.setLayout(panelUserOperationsLayout);
        panelUserOperationsLayout.setHorizontalGroup(
            panelUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserOperationsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonFollow, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
            .addGroup(panelUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelUserOperationsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistTable3, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        panelUserOperationsLayout.setVerticalGroup(
            panelUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserOperationsLayout.createSequentialGroup()
                .addContainerGap(200, Short.MAX_VALUE)
                .addComponent(buttonFollow)
                .addGap(21, 21, 21))
            .addGroup(panelUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelUserOperationsLayout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(panelPlaylistTable3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(104, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout panelFollowersAndUserOperationsLayout = new javax.swing.GroupLayout(panelFollowersAndUserOperations);
        panelFollowersAndUserOperations.setLayout(panelFollowersAndUserOperationsLayout);
        panelFollowersAndUserOperationsLayout.setHorizontalGroup(
            panelFollowersAndUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFollowersAndUserOperationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFollowersAndUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelUserOperations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFollowersOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelFollowersAndUserOperationsLayout.setVerticalGroup(
            panelFollowersAndUserOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFollowersAndUserOperationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelFollowersOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panelUserOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelStatistic.setBackground(new java.awt.Color(46, 46, 46));
        panelStatistic.setForeground(new java.awt.Color(242, 242, 242));

        panelMostLikedSong.setBackground(new java.awt.Color(24, 24, 24));
        panelMostLikedSong.setForeground(new java.awt.Color(242, 242, 242));

        labelTheMostLikedSongName.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostLikedSongName.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostLikedSongName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostLikedSongName.setText("Name");

        labelTheMostLikedSongArtist.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostLikedSongArtist.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostLikedSongArtist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostLikedSongArtist.setText("Artist");

        labelTheMostLikedSongLikes.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostLikedSongLikes.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostLikedSongLikes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostLikedSongLikes.setText("0");

        labelTheMostLikedSongPopularity.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostLikedSongPopularity.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostLikedSongPopularity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostLikedSongPopularity.setText("0");

        labelTheMostLikedSongDuration.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostLikedSongDuration.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostLikedSongDuration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostLikedSongDuration.setText("0:00");

        labelTheMostLilkeSongLikes1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostLilkeSongLikes1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostLilkeSongLikes1.setText("Likes:");

        labelTheMostLikeSongPopularity1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostLikeSongPopularity1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostLikeSongPopularity1.setText("Popularity:");

        labelTheMostPopularSongDuration2.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostPopularSongDuration2.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostPopularSongDuration2.setText("Duration:");

        javax.swing.GroupLayout panelMostLikedSongLayout = new javax.swing.GroupLayout(panelMostLikedSong);
        panelMostLikedSong.setLayout(panelMostLikedSongLayout);
        panelMostLikedSongLayout.setHorizontalGroup(
            panelMostLikedSongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostLikedSongLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTheMostLikedSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTheMostLikedSongArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(labelTheMostLilkeSongLikes1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostLikedSongLikes, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTheMostLikeSongPopularity1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostLikedSongPopularity, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(labelTheMostPopularSongDuration2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostLikedSongDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panelMostLikedSongLayout.setVerticalGroup(
            panelMostLikedSongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostLikedSongLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMostLikedSongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTheMostLikedSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostLikedSongArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostLikedSongLikes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostLikedSongPopularity, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostLikedSongDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostLilkeSongLikes1)
                    .addComponent(labelTheMostLikeSongPopularity1)
                    .addComponent(labelTheMostPopularSongDuration2)))
        );

        labelTheMostLikedSong.setFont(new java.awt.Font("Cascadia Mono", 2, 14)); // NOI18N
        labelTheMostLikedSong.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostLikedSong.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostLikedSong.setText("The most liked song");

        panelMostPopularSong.setBackground(new java.awt.Color(24, 24, 24));
        panelMostPopularSong.setForeground(new java.awt.Color(242, 242, 242));

        labelTheMostPopularSongName.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostPopularSongName.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostPopularSongName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostPopularSongName.setText("Name");

        labelTheMostPopularSongArtist.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostPopularSongArtist.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostPopularSongArtist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostPopularSongArtist.setText("Artist");

        labelTheMostPopularSongLikes.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostPopularSongLikes.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostPopularSongLikes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostPopularSongLikes.setText("0");

        labelTheMostPopularSongPopularity.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostPopularSongPopularity.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostPopularSongPopularity.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostPopularSongPopularity.setText("0");

        labelTheMostPopularSongDuration.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostPopularSongDuration.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostPopularSongDuration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostPopularSongDuration.setText("0:00");

        labelTheMostPopularSongDuration1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostPopularSongDuration1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostPopularSongDuration1.setText("Duration:");

        labelTheMostPopularSongLikes1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostPopularSongLikes1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostPopularSongLikes1.setText("Likes:");

        labelTheMostPopularSongPopularity1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostPopularSongPopularity1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostPopularSongPopularity1.setText("Popularity:");

        javax.swing.GroupLayout panelMostPopularSongLayout = new javax.swing.GroupLayout(panelMostPopularSong);
        panelMostPopularSong.setLayout(panelMostPopularSongLayout);
        panelMostPopularSongLayout.setHorizontalGroup(
            panelMostPopularSongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostPopularSongLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTheMostPopularSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTheMostPopularSongArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(labelTheMostPopularSongLikes1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostPopularSongLikes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(labelTheMostPopularSongPopularity1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostPopularSongPopularity, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(labelTheMostPopularSongDuration1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostPopularSongDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMostPopularSongLayout.setVerticalGroup(
            panelMostPopularSongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostPopularSongLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMostPopularSongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTheMostPopularSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostPopularSongArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostPopularSongLikes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostPopularSongPopularity, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostPopularSongDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostPopularSongDuration1)
                    .addComponent(labelTheMostPopularSongLikes1)
                    .addComponent(labelTheMostPopularSongPopularity1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelTheMostPopularSong.setFont(new java.awt.Font("Cascadia Mono", 2, 14)); // NOI18N
        labelTheMostPopularSong.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostPopularSong.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostPopularSong.setText("The most popular song");

        panelMostFollowedUser.setBackground(new java.awt.Color(24, 24, 24));
        panelMostFollowedUser.setForeground(new java.awt.Color(242, 242, 242));

        labelTheMostFollowedUsername.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostFollowedUsername.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostFollowedUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheMostFollowedUsername.setText("Name");

        labelTheMostFollowedUserListSize.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheMostFollowedUserListSize.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostFollowedUserListSize.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostFollowedUserListSize.setText("0");

        labelTheMostFollowedUserListSize1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheMostFollowedUserListSize1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheMostFollowedUserListSize1.setText("Followers:");

        javax.swing.GroupLayout panelMostFollowedUserLayout = new javax.swing.GroupLayout(panelMostFollowedUser);
        panelMostFollowedUser.setLayout(panelMostFollowedUserLayout);
        panelMostFollowedUserLayout.setHorizontalGroup(
            panelMostFollowedUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostFollowedUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTheMostFollowedUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(labelTheMostFollowedUserListSize1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostFollowedUserListSize, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMostFollowedUserLayout.setVerticalGroup(
            panelMostFollowedUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostFollowedUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMostFollowedUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTheMostFollowedUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostFollowedUserListSize, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostFollowedUserListSize1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelTheMostFollowedUser.setFont(new java.awt.Font("Cascadia Mono", 2, 14)); // NOI18N
        labelTheMostFollowedUser.setForeground(new java.awt.Color(255, 255, 255));
        labelTheMostFollowedUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheMostFollowedUser.setText("The most followed user");

        panelMostFollowedUser1.setBackground(new java.awt.Color(24, 24, 24));
        panelMostFollowedUser1.setForeground(new java.awt.Color(242, 242, 242));

        labelTheShortestListName.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheShortestListName.setForeground(new java.awt.Color(255, 255, 255));
        labelTheShortestListName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheShortestListName.setText("Name");

        labelTheShortestListCreator.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheShortestListCreator.setForeground(new java.awt.Color(255, 255, 255));
        labelTheShortestListCreator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheShortestListCreator.setText("Creator");

        labelTheShortestListDuration.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheShortestListDuration.setForeground(new java.awt.Color(255, 255, 255));
        labelTheShortestListDuration.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheShortestListDuration.setText("0:00");

        labelTheShortestListDuration1.setBackground(new java.awt.Color(24, 24, 24));
        labelTheShortestListDuration1.setForeground(new java.awt.Color(242, 242, 242));
        labelTheShortestListDuration1.setText("Duration:");

        javax.swing.GroupLayout panelMostFollowedUser1Layout = new javax.swing.GroupLayout(panelMostFollowedUser1);
        panelMostFollowedUser1.setLayout(panelMostFollowedUser1Layout);
        panelMostFollowedUser1Layout.setHorizontalGroup(
            panelMostFollowedUser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostFollowedUser1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTheShortestListName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTheShortestListCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(labelTheShortestListDuration1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTheShortestListDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMostFollowedUser1Layout.setVerticalGroup(
            panelMostFollowedUser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostFollowedUser1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMostFollowedUser1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTheShortestListName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheShortestListCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheShortestListDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheShortestListDuration1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelTheShortestList.setFont(new java.awt.Font("Cascadia Mono", 2, 14)); // NOI18N
        labelTheShortestList.setForeground(new java.awt.Color(255, 255, 255));
        labelTheShortestList.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheShortestList.setText("The shortest list");

        panelMostFollowedUser2.setBackground(new java.awt.Color(24, 24, 24));
        panelMostFollowedUser2.setForeground(new java.awt.Color(242, 242, 242));

        labelTheLongestListName.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheLongestListName.setForeground(new java.awt.Color(255, 255, 255));
        labelTheLongestListName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheLongestListName.setText("Name");

        labelTheLongestListDuration.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheLongestListDuration.setForeground(new java.awt.Color(255, 255, 255));
        labelTheLongestListDuration.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheLongestListDuration.setText("0:00");

        labelTheLongestListCreator.setFont(new java.awt.Font("Cascadia Mono", 2, 10)); // NOI18N
        labelTheLongestListCreator.setForeground(new java.awt.Color(255, 255, 255));
        labelTheLongestListCreator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTheLongestListCreator.setText("Creator");

        labelTheLongestListDuration2.setBackground(new java.awt.Color(24, 24, 24));
        labelTheLongestListDuration2.setForeground(new java.awt.Color(242, 242, 242));
        labelTheLongestListDuration2.setText("Duration:");

        javax.swing.GroupLayout panelMostFollowedUser2Layout = new javax.swing.GroupLayout(panelMostFollowedUser2);
        panelMostFollowedUser2.setLayout(panelMostFollowedUser2Layout);
        panelMostFollowedUser2Layout.setHorizontalGroup(
            panelMostFollowedUser2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostFollowedUser2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTheLongestListName, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTheLongestListCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(labelTheLongestListDuration2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTheLongestListDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMostFollowedUser2Layout.setVerticalGroup(
            panelMostFollowedUser2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostFollowedUser2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMostFollowedUser2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTheLongestListName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheLongestListDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheLongestListCreator, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheLongestListDuration2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelTheLongestList.setFont(new java.awt.Font("Cascadia Mono", 2, 14)); // NOI18N
        labelTheLongestList.setForeground(new java.awt.Color(255, 255, 255));
        labelTheLongestList.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelTheLongestList.setText("The longest list");

        javax.swing.GroupLayout panelStatisticLayout = new javax.swing.GroupLayout(panelStatistic);
        panelStatistic.setLayout(panelStatisticLayout);
        panelStatisticLayout.setHorizontalGroup(
            panelStatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatisticLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelStatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelTheMostLikedSong, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostPopularSong, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheMostFollowedUser, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheShortestList, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTheLongestList, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelMostFollowedUser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMostFollowedUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMostPopularSong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMostLikedSong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMostFollowedUser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelStatisticLayout.setVerticalGroup(
            panelStatisticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStatisticLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTheMostLikedSong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMostLikedSong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheMostPopularSong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMostPopularSong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTheMostFollowedUser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMostFollowedUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTheShortestList, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMostFollowedUser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTheLongestList, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMostFollowedUser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(panelSongTable, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(panelPlaylistOperations, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(panelFollowersAndUserOperations, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(panelStatistic, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelFollowersAndUserOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addComponent(panelSongTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(2, 2, 2)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelStatistic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(81, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelPlaylistOperations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelFollowersAndUserOperations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(panelSongTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelStatistic, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelBottom.setBackground(new java.awt.Color(27, 27, 27));

        bottomLabelSongName.setForeground(new java.awt.Color(255, 255, 255));
        bottomLabelSongName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bottomLabelSongName.setText("Song");

        bottomLabelArtist.setForeground(new java.awt.Color(255, 255, 255));
        bottomLabelArtist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bottomLabelArtist.setText("Artist");

        bottomButtonPlay.setText("play");

        bottomButtonLike.setText("like");

        bottomLabelDuration.setForeground(new java.awt.Color(255, 255, 255));
        bottomLabelDuration.setText("0:00");

        javax.swing.GroupLayout panelBottomLayout = new javax.swing.GroupLayout(panelBottom);
        panelBottom.setLayout(panelBottomLayout);
        panelBottomLayout.setHorizontalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bottomLabelSongName, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE)
                .addComponent(bottomLabelArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197)
                .addComponent(bottomLabelDuration)
                .addGap(41, 41, 41)
                .addComponent(bottomButtonPlay)
                .addGap(29, 29, 29)
                .addComponent(bottomButtonLike)
                .addGap(25, 25, 25))
        );
        panelBottomLayout.setVerticalGroup(
            panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBottomLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(panelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bottomLabelSongName)
                    .addComponent(bottomLabelArtist)
                    .addComponent(bottomButtonPlay)
                    .addComponent(bottomButtonLike)
                    .addComponent(bottomLabelDuration))
                .addGap(29, 29, 29))
        );

        jLayeredPane2.setLayer(panelBottom, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(panelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addComponent(panelBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPane2)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLayeredPane1)
                    .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leftPanelSongsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftPanelSongsButtonMouseClicked
        // TODO add your handling code here:
        showSongsPanel();
    }//GEN-LAST:event_leftPanelSongsButtonMouseClicked

    private void leftPanelPlaylistsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftPanelPlaylistsButtonMouseClicked
        // TODO add your handling code here:
       /* if(!panelPlaylistOperations.isVisible()){
            panelPlaylistOperations.setVisible(true);
            panelSongTable.setVisible(false);
            revalidate();
            repaint();
        }*/
       
       showPlaylistPanel();
    }//GEN-LAST:event_leftPanelPlaylistsButtonMouseClicked

    private void leftPanelPlaylistsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftPanelPlaylistsButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftPanelPlaylistsButtonActionPerformed

    private void leftPanelFollowersButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftPanelFollowersButtonMouseClicked
        // TODO add your handling code here:
        showFollowersPanel();
    }//GEN-LAST:event_leftPanelFollowersButtonMouseClicked

    private void leftPanelButtonStatisticMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftPanelButtonStatisticMouseClicked
        // TODO add your handling code here:
        showStatisticPanel();
    }//GEN-LAST:event_leftPanelButtonStatisticMouseClicked

    private void playlistTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playlistTable1MouseClicked
        // TODO add your handling code here:
         selectedPlaylistTableRow = playlistTable1.getSelectedRow();
    }//GEN-LAST:event_playlistTable1MouseClicked

    private void buttonShowSelectedPlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonShowSelectedPlaylistMouseClicked
        // TODO add your handling code here:
        int playlistID = (int) playlistTable1.getModel().getValueAt(selectedPlaylistTableRow,4);
        fillSongListTable(Model.getInstance().getSongs(playlistID));
        showSongsPanel();

        /*bottomLabelSongName.setText(songTable.getModel().getValueAt(selectedSongsTableRow,0).toString());
        bottomLabelArtist.setText(songTable.getModel().getValueAt(selectedSongsTableRow,1).toString());
        bottomLabelDuration.setText(songTable.getModel().getValueAt(selectedSongsTableRow,4).toString());*/
        
    }//GEN-LAST:event_buttonShowSelectedPlaylistMouseClicked

    private void followersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_followersTableMouseClicked
        // TODO add your handling code here:
        selectedFollowersTableRow = followersTable.getSelectedRow();
    }//GEN-LAST:event_followersTableMouseClicked

    private void followersTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_followersTable1MouseClicked
        // TODO add your handling code here:
        selectedAllUsersTableRow = followersTable1.getSelectedRow();
    }//GEN-LAST:event_followersTable1MouseClicked

    private void buttonFollowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonFollowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonFollowActionPerformed

    private void songTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songTableMouseClicked
        // TODO add your handling code here:System.out.println(songTable.getSelectedRow());
        selectedSongsTableRow = songTable.getSelectedRow();
        updateBottomPanel();
    }//GEN-LAST:event_songTableMouseClicked

    private void buttonShowSelectedUserPlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonShowSelectedUserPlaylistMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_buttonShowSelectedUserPlaylistMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bottomButtonLike;
    private javax.swing.JButton bottomButtonPlay;
    private javax.swing.JLabel bottomLabelArtist;
    private javax.swing.JLabel bottomLabelDuration;
    private javax.swing.JLabel bottomLabelSongName;
    private javax.swing.JButton buttonAddSongToPlaylist;
    private javax.swing.JButton buttonFollow;
    private javax.swing.JButton buttonPlaylistAdd1;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JButton buttonShowSelectedPlaylist;
    private javax.swing.JButton buttonShowSelectedUserPlaylist;
    private javax.swing.JButton buttonUnfollow;
    private javax.swing.JComboBox<String> comboBoxPlaylist;
    private javax.swing.JComboBox<String> comboBoxPlaylistType;
    private javax.swing.JTable followersTable;
    private javax.swing.JTable followersTable1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLabel labelTheLongestList;
    private javax.swing.JLabel labelTheLongestListCreator;
    private javax.swing.JLabel labelTheLongestListDuration;
    private javax.swing.JLabel labelTheLongestListDuration2;
    private javax.swing.JLabel labelTheLongestListName;
    private javax.swing.JLabel labelTheMostFollowedUser;
    private javax.swing.JLabel labelTheMostFollowedUserListSize;
    private javax.swing.JLabel labelTheMostFollowedUserListSize1;
    private javax.swing.JLabel labelTheMostFollowedUsername;
    private javax.swing.JLabel labelTheMostLikeSongPopularity1;
    private javax.swing.JLabel labelTheMostLikedSong;
    private javax.swing.JLabel labelTheMostLikedSongArtist;
    private javax.swing.JLabel labelTheMostLikedSongDuration;
    private javax.swing.JLabel labelTheMostLikedSongLikes;
    private javax.swing.JLabel labelTheMostLikedSongName;
    private javax.swing.JLabel labelTheMostLikedSongPopularity;
    private javax.swing.JLabel labelTheMostLilkeSongLikes1;
    private javax.swing.JLabel labelTheMostPopularSong;
    private javax.swing.JLabel labelTheMostPopularSongArtist;
    private javax.swing.JLabel labelTheMostPopularSongDuration;
    private javax.swing.JLabel labelTheMostPopularSongDuration1;
    private javax.swing.JLabel labelTheMostPopularSongDuration2;
    private javax.swing.JLabel labelTheMostPopularSongLikes;
    private javax.swing.JLabel labelTheMostPopularSongLikes1;
    private javax.swing.JLabel labelTheMostPopularSongName;
    private javax.swing.JLabel labelTheMostPopularSongPopularity;
    private javax.swing.JLabel labelTheMostPopularSongPopularity1;
    private javax.swing.JLabel labelTheShortestList;
    private javax.swing.JLabel labelTheShortestListCreator;
    private javax.swing.JLabel labelTheShortestListDuration;
    private javax.swing.JLabel labelTheShortestListDuration1;
    private javax.swing.JLabel labelTheShortestListName;
    private javax.swing.JLabel labelplaylistName;
    private javax.swing.JLabel labelplaylistType;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JButton leftPanelButtonStatistic;
    private javax.swing.JButton leftPanelFollowersButton;
    private javax.swing.JButton leftPanelPlaylistsButton;
    private javax.swing.JSeparator leftPanelSeperator;
    private javax.swing.JSeparator leftPanelSeperator1;
    private javax.swing.JSeparator leftPanelSeperator2;
    private javax.swing.JSeparator leftPanelSeperator3;
    private javax.swing.JButton leftPanelSongsButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel panelBottom;
    private javax.swing.JPanel panelFollowersAndUserOperations;
    private javax.swing.JPanel panelFollowersOperation;
    private javax.swing.JPanel panelMostFollowedUser;
    private javax.swing.JPanel panelMostFollowedUser1;
    private javax.swing.JPanel panelMostFollowedUser2;
    private javax.swing.JPanel panelMostLikedSong;
    private javax.swing.JPanel panelMostPopularSong;
    private javax.swing.JPanel panelPlaylistAdder;
    private javax.swing.JPanel panelPlaylistOperations;
    private javax.swing.JScrollPane panelPlaylistTable1;
    private javax.swing.JScrollPane panelPlaylistTable2;
    private javax.swing.JScrollPane panelPlaylistTable3;
    private javax.swing.JPanel panelSongTable;
    private javax.swing.JScrollPane panelSongTable1;
    private javax.swing.JPanel panelStatistic;
    private javax.swing.JPanel panelUserOperations;
    private javax.swing.JTable playlistTable1;
    private javax.swing.JTable songTable;
    private javax.swing.JTextField textFieldPlaylistName;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel topPanelLabelLoggedUser;
    // End of variables declaration//GEN-END:variables

    public void fillSongListTable(List<ISong> songList){

        DefaultTableModel defaultTableModel = (DefaultTableModel) songTable.getModel();
        defaultTableModel.setRowCount(0);

        for (int i = 0; i < songList.size(); i++) {


            Vector vector = new Vector();
            ISong tempSongList = songList.get(i);
            vector.add(tempSongList.getName());
            vector.add(tempSongList.getArtist());
            vector.add(tempSongList.getNumberOfLikes());
            vector.add(tempSongList.getNumberOfpopularity());
            vector.add(tempSongList.getDurationInMinutes());
            vector.add(tempSongList.getTrackId());
            defaultTableModel.addRow(vector);
            }
        ((DefaultTableModel) songTable.getModel()).fireTableDataChanged();
    }
    public void fillPlaylistTable(List<IPLaylist<ISong>> listOfTempIPlaylist){
        DefaultTableModel defaultTableModel = (DefaultTableModel) playlistTable1.getModel();
        defaultTableModel.setRowCount(0);
        for (int i = 0; i < listOfTempIPlaylist.size(); i++) {

            Vector<Object> tempPlaylistTableAttributes = new Vector<>();
            IPLaylist tempPlaylist = listOfTempIPlaylist.get(i);
            tempPlaylistTableAttributes.add(tempPlaylist.getPlayListName());
            tempPlaylistTableAttributes.add(tempPlaylist.getPlaylistType());
            tempPlaylistTableAttributes.add(tempPlaylist.getDurationInMinutes());
            tempPlaylistTableAttributes.add(tempPlaylist.getCreatorUserName());
            tempPlaylistTableAttributes.add(tempPlaylist.getId());
            defaultTableModel.addRow(tempPlaylistTableAttributes);
        }
        ((DefaultTableModel) playlistTable1.getModel()).fireTableDataChanged();



    }
    public void fillAllUsersTable(List<IUser> allUsers){
        DefaultTableModel defaultTableModel = (DefaultTableModel) followersTable1.getModel();
        defaultTableModel.setRowCount(0);
        for (int i = 0; i < allUsers.size(); i++) {

            Vector<Object> tempUserTableAttributes = new Vector<>();

            IUser tempUser= allUsers.get(i);
            tempUserTableAttributes.add(tempUser.getUserName());


            defaultTableModel.addRow(tempUserTableAttributes);
        }
        ((DefaultTableModel) followersTable1.getModel()).fireTableDataChanged();



    }


    public void fillFollowedUsersTable(List<String> followedUsers){
        DefaultTableModel defaultTableModel = (DefaultTableModel) followersTable.getModel();
        defaultTableModel.setRowCount(0);
        for (int i = 0; i < followedUsers.size(); i++) {

            Vector<Object> tempUserTableAttributes = new Vector<>();


            tempUserTableAttributes.add(followedUsers.get(i));


            defaultTableModel.addRow(tempUserTableAttributes);
        }

        ((DefaultTableModel) followersTable.getModel()).fireTableDataChanged();



    }

    public int  getSelectedSong()
    {
        return Integer.parseInt(songTable.getModel().getValueAt(selectedSongsTableRow,5).toString());
    }

    public int getSelectedPlaylist()
    {   lastUsedPlaylistId=Integer.parseInt(playlistTable1.getModel().getValueAt(selectedPlaylistTableRow,4).toString());
        return lastUsedPlaylistId;
    }


    public String getSelectedUserNameAtAllFollowers()
    {
        return followersTable1.getModel().getValueAt(selectedAllUsersTableRow,0).toString();
    }

    public String getSelectedUserNameAtFollowed()
    {
        return followersTable.getModel().getValueAt(selectedFollowersTableRow,0).toString();
    }

    public void addPlayButtonActionListener(ActionListener actionListener)
    {

        bottomButtonPlay.addActionListener(actionListener);
    }

    public void addLikeButtonListener(ActionListener actionListener)
    {

        bottomButtonLike.addActionListener(actionListener);
    }

    public void addShowSelectedButtonListener(ActionListener actionListener)
    {
        buttonShowSelectedPlaylist.addActionListener(actionListener);
    }

    public void songsButtonListener(ActionListener actionListener)
    {
        leftPanelSongsButton.addActionListener(actionListener);
    }

    public void followerButtonListener(ActionListener actionListener)
    {
        leftPanelFollowersButton.addActionListener(actionListener);
    }

    public void followButonListener(ActionListener actionListener)
    {
        buttonFollow.addActionListener(actionListener);
    }

    public void unFollowButtonListener(ActionListener actionListener)
    {

        buttonUnfollow.addActionListener(actionListener);
    }

    public void addToPlaylistButtonListener(ActionListener actionListener)
    {
        buttonAddSongToPlaylist.addActionListener(actionListener);

    }
    public void initializeTable()
    {


        fillSongListTable(Model.getInstance().getSongs());

    }
    public String getSelectedPlaylistName()
    {

        return comboBoxPlaylist.getSelectedItem().toString();
    }
    public void initializeTable(List<ISong> songList)

    {
        fillSongListTable(songList);
    }

    private void showSongsPanel(){
        panelPlaylistOperations.setVisible(false);
        panelFollowersAndUserOperations.setVisible(false);
        panelBottom.setVisible(true);
        panelSongTable.setVisible(true);
    }
    private void showPlaylistPanel(){
        panelSongTable.setVisible(false);
        panelFollowersAndUserOperations.setVisible(false);
        panelBottom.setVisible(false);
        panelPlaylistOperations.setVisible(true);

    }
    private void showFollowersPanel(){
        panelSongTable.setVisible(false);
        panelPlaylistOperations.setVisible(false);
        panelBottom.setVisible(false);
        panelFollowersAndUserOperations.setVisible(true);

    }
    private void showStatisticPanel(){
        panelSongTable.setVisible(false);
        panelPlaylistOperations.setVisible(false);
        panelFollowersAndUserOperations.setVisible(false);
        panelBottom.setVisible(false);
        panelStatistic.setVisible(true);
    }

    private void fillComboBoxWithPlaylistType(){
        comboBoxPlaylistType.setModel(new DefaultComboBoxModel<>
                (Arrays.toString(PlaylistType.values()).replaceAll("^.|.$", "").split(", ")));

    }


    public String getPlaylistName()
    {
        return textFieldPlaylistName.getText();
    }

    public int getTypeId()
    {
        return comboBoxPlaylistType.getSelectedIndex();
    }

    public void emptyPlaylistName()
    {
        JOptionPane.showMessageDialog(null,"please enter playlistName");
    }

    public void selectTypeMessage()
    {
        JOptionPane.showMessageDialog(null,"please select type");
    }





    public void PlayListButtonListener(ActionListener actionListener)
    {
        leftPanelPlaylistsButton.addActionListener(actionListener);
    }

    public void CreateButtonListener(ActionListener actionListener)
    {
        buttonPlaylistAdd1.addActionListener(actionListener);
    }

    public void addRemoveButtonListener(ActionListener actionListener)
    {
        buttonRemove.addActionListener(actionListener);
    }

    public void fillUserPlaylistsComboBox(){
        IModel model = Model.getInstance();
        List<IPLaylist<ISong>> tempList = model.getPlayList(model.getCurrentUsername());
        Vector<String> tempStringList = new Vector<>();
        for (int i = 0; i < tempList.size(); i++) {
            tempStringList.add(tempList.get(i).getPlayListName());
        }
        comboBoxPlaylist.setModel(new DefaultComboBoxModel<String>(tempStringList));
    }

    public void statisticButonListener(ActionListener actionListener)
    {

        leftPanelButtonStatistic.addActionListener(actionListener);
    }

    public void fillTheMostPopularSong(String name,String artistName,String numberOfLikes,String numberOfPopularity,String duration){
        labelTheMostPopularSongName.setText(name);
        labelTheMostPopularSongArtist.setText(artistName);
        labelTheMostPopularSongLikes.setText(numberOfLikes);
        labelTheMostPopularSongPopularity.setText(numberOfPopularity);
        labelTheMostPopularSongDuration.setText(duration);


    }


    public void fillTheMostLikeSong(String name,String artistName,String numberOfLikes,String numberOfPopularity,String duration){
        {

            labelTheMostLikedSong.setText(name);
            labelTheMostLikedSongArtist.setText(artistName);
            labelTheMostLikedSongLikes.setText(numberOfLikes);
            labelTheMostLikedSongPopularity.setText(numberOfPopularity);
            labelTheMostLikedSongDuration.setText(duration);
        }
    }

    public void fillTheMostFollowedUser(String username,String numberOfFollowers){
        labelTheMostFollowedUsername.setText(username);
        labelTheMostFollowedUserListSize.setText(numberOfFollowers);
    }
    public void fillTheShortestList(String playlistName,String creatorName,String duration){
        labelTheShortestListName.setText(playlistName);
        labelTheShortestListCreator.setText(creatorName);
        labelTheShortestListDuration.setText(duration);
    }
    public void fillTheLongestList(String playlistName,String creatorName,String duration){

        labelTheLongestListName.setText(playlistName);
        labelTheLongestListCreator.setText(creatorName);
        labelTheLongestListDuration.setText(duration);
    }

    public void noPlaylistMessage()
    {
        JOptionPane.showMessageDialog(null,"With 0 playlist statistics page cannot be opened please create playlist and add songs");
    }



}
